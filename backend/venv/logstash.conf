# # input {
# #   # HTTP input plugin to receive logs from Flask backend
# #   http {
# #     port => 5044 # Port to listen for incoming logs
# #   }
# # }
# # output {
# #   # Send processed logs to Elasticsearch
# #   elasticsearch {
# #     hosts=> ["localhost:9200"] # Elasticsearch host
# #     index => "weare" # Index name pattern
# #     user => "elastic"
# #     password => "nP497vW-j4btnbgJVjDW"

# #   }
# # }


# # input {
# #   # HTTP input plugin to receive logs from Flask backend
# #   http {
# #     port => 5044 # Port to listen for incoming logs
# #   }
# # }

# # filter {
# #   # Parse logs as JSON
# #   json {
# #     source => "message"
# #   }
# # }

# # output {
# #   # Send processed logs to Elasticsearch
# #   elasticsearch {
# #     hosts => ["localhost:9200"] # Elasticsearch host
# #     index => "main123" # Index name pattern
# #     user => "elastic"
# #     password => "nP497vW-j4btnbgJVjDW"
# #   }

# #   # Print processed logs to the terminal
# #   stdout {}
# # }

# # input {
# #   http {
# #     port => 5044
# #   }
# # }

# # filter {
# #   json {
# #     source => "message"
# #     remove_field => ["message"]
# #   }

# #   csv {
# #     autodetect_column_names => true
# #     remove_field => ["message"]
# #   }

# #   xml {
# #     source => "message"
# #     target => "parsed_log"
# #     remove_field => ["message"]
# #   }

# #   grok {
# #     match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:message}" }
# #   }
# # }

# # output {
# #   elasticsearch {
# #     hosts => ["localhost:9200"]
# #     index => "hi123"
# #     user => "elastic"
# #     password => "nP497vW-j4btnbgJVjDW"
# #   }

# #   stdout {}
# # }


# # input {
# #   http {
# #     port => 5044
# #     codec => line { format => "%{message}" } # Assuming files are sent as raw text
# #   }
# # }

# # filter {
# #   json {
# #     source => "message"
# #     remove_field => ["message"]
# #   }

# #   csv {
# #     autodetect_column_names => true
# #     remove_field => ["message"]
# #   }

# #   xml {
# #     source => "message"
# #     target => "parsed_log"
# #     remove_field => ["message"]
# #   }

# #   grok {
# #     match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:message}" }
# #   }
# # }

# # output {
# #   elasticsearch {
# #     hosts => ["localhost:9200"]
# #     index => "hi123"
# #     user => "elastic"
# #     password => "nP497vW-j4btnbgJVjDW"
# #   }

# #   stdout {}
# # }

# input {
#   http {
#     port => 5044
#     codec => multiline {
#       pattern => "^%{TIMESTAMP_ISO8601}"
#       negate => true
#       what => previous
#     }
#   }
# }

# filter {
#   if [http][request][mime_type] == "multipart/form-data; boundary=22d26f5c851a1dd3253604d175fe5562" {
#     dissect {
#       mapping => {
#         "[event][original]" => "--%{boundary}\r\n%{}; name=\"file\"; filename=\"%{filename}\"\r\n\r\n%{log_content}\r\n--%{boundary}--\r"
#       }
#       remove_field => ["boundary", "filename", "log_content", "message", "tags"]
#     }

#     if [event][original] =~ /^{.*}$/ {
#       json {
#         source => "log_content"
#       }
#     } else if [event][original] =~ /^<.*>$/ {
#       xml {
#         source => "log_content"
#         target => "parsed_log"
#       }
#     } else if [event][original] =~ /.*\.csv$/ {
#       csv {
#         autodetect_column_names => true
#         source => "log_content"
#       }
#     } else {
#       grok {
#         match => { "log_content" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:message}" }
#       }
#     }
#   }
# }

# output {
#   elasticsearch {
#     hosts => ["localhost:9200"]
#     index => "hi123"
#     user => "elastic"
#     password => "nP497vW-j4btnbgJVjDW"
#   }

#   stdout {}
# }

# input {
#   http {
#     port => 5044
#     codec => "json"
#   }
# }

# output {
#   elasticsearch {
#     hosts => ["localhost:9200"]
#     index => "hi1234"
#     document_id => "%{[@metadata][fingerprint]}"
#     user => "elastic"  # Change this to your Elasticsearch username
#     password => "nP497vW-j4btnbgJVjDW"  # Change this to your Elasticsearch password
#   }
# }
input {
  http {
    port => 5044
    codec => "json"
  }
}

filter {
  json {
    source => "event.original"
    target => "parsed_log"
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "hi1234"
    document_id => "%{+YYYYMMddHHmmssSSS}_%{[@metadata][fingerprint]}"
    user => "elastic"
    password => "nP497vW-j4btnbgJVjDW"
  }
}
